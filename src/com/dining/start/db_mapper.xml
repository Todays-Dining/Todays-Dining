<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.example.BlogMapper">
	<!-- 
	   태그 : <태그  속성> 텍스트 </태그>
	    id 속성 : 외부(DAO)에서 해당 태그를 지칭하는 (호출하는) 이름, 중복안됨  
	    resultType 속성 : 결과에 대한 속성(select문은 95% VO속성이다)
	       select문에서 집계합수를 사용하면 resultType int 이다.    
	    parameterType 속성 : 대부분 VO속성이다(VO 아니면 전달하는 변수의 자료형이다.)
		<select id="" resultType=""></select>
	    <select id="" resultType="" parameterType=""></select>
	    
	    resultType은 없다. 이유는 무조건 int (숫자)
	    <update id="" parameterType=""></update>
	    <insert id="" parameterType=""></insert>
	    <delete id="" parameterType=""></delete>
	 -->
	
	<!-- <select id="findyourid" parameterType="String" resultType="com.dining.start.db_VO">
	SELECT ID FROM SIGNUP_TABLE WHERE NAME = #{name} AND EMAIL = #{email} AND BIRTHDAY = #{birthday};
	select ID from SIGNUP_TABLE where NAME = #{name} and EMAIL = #{email} and BIRTHDAY = #{birthday}
    </select> -->
    
    
   	<!-- 좌현 ID찾기 -> 아이디 찾기에서 이름, 생년월일, 이메일이 일치하면 그에 맞는 아이디를 db에서 호출  -->
	<select id="findid" resultType="com.dining.start.db_VO"> select ID from SIGNUP_TABLE where name = #{name} and email = #{email} and to_char(birthday,'yymmdd') = #{birthday} </select>
	<select id="findpw" resultType="com.dining.start.db_VO"> select PASSWORD from SIGNUP_TABLE where id = #{id} and PASSWORD_SEARCH_Q = #{password_search_q} and PASSWORD_SEARCH_A = #{password_search_a} </select>
	<!--  <select id="selectId" parameterType="java.util.HashMap" resultType="String">
		select
			id
		from signup_page
		where name = #{name}
		and email = #{email}
		and birthday = cast(#{birthday} as date)
	</select>  -->
    
    <select id="login" resultType="com.dining.start.db_VO">
	    select * from SIGNUP_TABLE where id = #{id} and password = #{password} 
	</select>
    
    <select id="getID" resultType="com.dining.start.db_VO">
        select ID from SIGNUP_TABLE where name = #{name} and email = #{email} and birthday = #{birthday}
    </select>
	
	<select id="idChk" parameterType="String" resultType="com.dining.start.db_VO">
        select ID from SIGNUP_TABLE where ID = #{id}
    </select>
    
	<insert id="infoIns" parameterType="com.dining.start.db_VO">
        insert into SIGNUP_TABLE(STATUS, ID , PASSWORD, NAME, EMAIL, BIRTHDAY, PASSWORD_SEARCH_Q , PASSWORD_SEARCH_A, FAVORITE_LIST, REPORTED_COUNT)
        values(#{status}, #{id} , #{password}, #{name}, #{email}, #{birthday}, #{password_search_q}    , #{password_search_a}, #{favorite_list}, #{reported_count})
    </insert>
    
    <delete id="infoDel" parameterType="com.dining.start.db_VO">
        delete from SIGNUP_TABLE where ID = #{id}
    </delete>
    
    <update id="infoUpdate" parameterType="com.dining.start.db_VO">
        update SIGNUP_TABLE set ID=#{id}, NAME=#{name}, EMAIL=#{email} , BIRTHDAY=#{birthday}
        , PASSWORD_SEARCH_Q =#{password_search_q} , PASSWORD_SEARCH_A =#{password_search_a}
        where ID = #{id}
    </update>
    
     <select id="pwChk" parameterType="String" resultType="com.dining.start.db_VO">
        select PASSWORD from SIGNUP_TABLE where ID = #{id} 
    </select>

    <select id="getmyid" parameterType="String" resultType="com.dining.start.db_VO">
        select * from SIGNUP_TABLE where ID = #{id}
    </select>
    
    <!-- 재훈 21 Serach 확인 -->
     <select id="Search_Ck" parameterType="String" resultType="com.dining.start.db_VO">
       select DINER_NAME from (select * from DINER_TABLE where DINER_NAME like '%'||#{search}||'%'
        or MENU like '%'||#{search}||'%' OR food_category like '%'||#{search}||'%') where rownum=1
    </select>
    <!-- 재훈 21 Serach -->
     <select id="Search"  resultType="com.dining.start.db_VO">
      select DINER_NAME, MENU from (select * from DINER_TABLE where DINER_NAME like '%'||#{search}||'%'
        or MENU like '%'||#{search}||'%' OR food_category like '%'||#{search}||'%')
    </select>
    
      <!-- 재훈 22 Serach -->
     <select id="storeInfo"  resultType="com.dining.start.db_VO">
         select * from DINER_TABLE where DINER_NAME = #{diner_name} 
	<!--    SELECT *
	FROM (
	    SELECT d.*, TRUNC(AVG(r.star) OVER (PARTITION BY r.diner_no), 1) AS avg_star,
	           ROW_NUMBER() OVER (PARTITION BY r.diner_no ORDER BY r.review_time DESC) AS row_num
	    FROM diner_table d
	    JOIN review_table r ON d.diner_no = r.diner_no
	    WHERE d.diner_name = #{diner_name}
	) sub
	WHERE row_num = 1 -->
    </select>
    
    <!-- 상우 best 식당명, 카테고리 받아오기 -->
    <select id="bestOfAll" resultType="com.dining.start.db_VO">
   		select * from REVIEW_AVG_VIEW where rownum=1
    </select>
    
<!--      <update id="infoUpdate" parameterType="com.dining.start.db_VO">
        update SIGNUP_TABLE set ID=#{id}, NAME=#{name}, EMAIL=#{email} , BIRTHDAY=#{birthday}
        , PASSWORD_SEARCH_Q =#{password_search_q} , PASSWORD_SEARCH_A =#{password_search_a}
        where ID = #{id}
    </update> -->
    
    <!-- <select id="s_namereview" parameterType="String" resultType="com.dining.start.db_VO">
		select password from SIGNUP_TABLE where ID=#{id}
    </select> -->
    
    <!-- 상우 37 비밀번호 확인용 받아오기 -->
    <select id="getPw" resultType="String" parameterType="com.dining.start.db_VO">
        select PASSWORD from SIGNUP_TABLE where ID = #{id_for_pwchk}
    </select>
    
    <!-- mapper에 세미콜론; 절대 찍지 말자!!! -->
    <!-- 38 상우 mypage 비밀번호 변경 -->
    <update id="changePw" parameterType="com.dining.start.db_VO">
        update SIGNUP_TABLE set PASSWORD = #{new_pw} where ID=#{id}
    </update>
    
    <!-- 성훈 매퍼 41~ -->
    <!-- 41 관리자 리뷰페이지 전체가져오기 기능 -->
    <select id="reviewAll" resultType="com.dining.start.db_VO">
        select r.id , r.review_content , r.review_number , r.star , d.diner_name
        from REVIEW_TABLE r , DINER_TABLE d
        where r.diner_no = d.diner_no 
    </select>
    
    <!-- 42 가게이름으로 리뷰 검색 -->
    <select id="s_namereview" parameterType="String" resultType="com.dining.start.db_VO">
        select r.id , r.review_content , r.review_number , r.star , d.diner_name
        from REVIEW_TABLE r , DINER_TABLE d
        where r.diner_no = d.diner_no and d.diner_name= #{d.diner_name}
    </select>
    
    <!-- 43 회원이름으로 리뷰 검색 -->
    <select id="idreview" parameterType="String" resultType="com.dining.start.db_VO">
        select r.id , r.review_content , r.review_number , r.star , d.diner_name
        from REVIEW_TABLE r , DINER_TABLE d
        where r.diner_no = d.diner_no and r.id = #{r.id}
    </select>
    
    <!-- 44 회원정보 전부 받아오기 -->
    <select id="memberAll" resultType="com.dining.start.db_VO">
        select * from SIGNUP_TABLE
    </select>
    
    <!-- 45회원아이디로 정보 검색 -->
    <select id="shmbid" parameterType="com.dining.start.db_VO" resultType="com.dining.start.db_VO">
        select * from SIGNUP_TABLE where id = #{id} 
    </select>
    
    <!-- 51 하영 가게이름으로 리뷰 작성자 아이디, 리뷰 내용 검색 -->
    <select id="infoReview" resultType="com.dining.start.db_VO" parameterType="com.dining.start.db_VO">
		select d.diner_name, r.id, r.review_content, r.review_time
		from diner_table d, review_table r
		where d.diner_no = r.diner_no and d.diner_name=#{diner_name}
		order by r.review_time desc
	</select>
    
    <!-- 52 하영 가게 리뷰 작성하기(입력) 작성중... -->
    <insert id="starNreview" parameterType="com.dining.start.db_VO">
    	insert into review_table(id,diner_no,review_content,review_time,star)
    	values(id,diner_no,review_content,review_time,star)
    </insert>

    
</mapper>